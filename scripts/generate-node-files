#!/usr/bin/env python3

import sys, os
import json
from subprocess import check_output
from pathlib import Path

import lib_rchain_key
import lib_rnode_tls

if len(sys.argv) < 4:
    print(
        f'Usage: {sys.argv[0]} <hostname> <network-id> <out-dir> [bootstrap-url]',
        file=sys.stderr)
    sys.exit(1)

hostname = sys.argv[1]
network_id = sys.argv[2]
out_dir = Path(sys.argv[3])
bootstrap_url = None
if len(sys.argv) > 4:
    bootstrap_url = sys.argv[4]

######################################################################
# Generate / fetch keys

key, pub_key = lib_rchain_key.generate_key_pair_hex()
tls_key, tls_cert, node_id = lib_rnode_tls.generate_node_tls_key_cert_id()

######################################################################
# Create dependant values

rnode_url = 'rnode://{}@{}?protocol={}&discovery={}'.format(
    node_id, hostname, 40400, 40404)

rnode_conf = {
    'rnode': {
        'casper': {
            'validator-private-key': key,
            'validator-public-key': pub_key,
            'wallets-file': '/var/lib/rnode-static/wallets.txt',
        },
        'server': {
            'host': hostname,
            'standalone': not bootstrap_url,
            'bootstrap': bootstrap_url or rnode_url,
            'upnp': False,
            'port': 40400,
            'port-kademlia': 40404,
            'tls': {
                'key': '/var/lib/rnode-static/node.key.pem',
                'certificate': '/var/lib/rnode-static/node.certificate.pem',
            },
            'metrics': {
                'prometheus': True,
                'zipkin': True,
                'sigar': True,
                'influxdb': False,
                'influxdb-udp': True,
            },
            'network-id': network_id,
        },
        'grpc': {
            'port-external': 40401,
        },
        'influxdb': {
            'hostname': 'perf-bootstrap.c.developer-222401.internal',
            'port': 8091,
        },
    },
    'kamon': {
        'zipkin': {
            'host': 'zipkin',
            'port': 9411,
        },
        'trace': {
            'sampler': 'always',
            'join-remote-parents-with-same-span-id': True,
        },
    }
}

######################################################################
# Save it

os.umask(0o77)

(out_dir / 'rnode.conf').write_text(json.dumps(rnode_conf, indent=4))
(out_dir / 'node.key.pem').write_text(tls_key)
(out_dir / 'node.certificate.pem').write_text(tls_cert)
